# Generated by Django 4.0.6 on 2024-08-05 17:54

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=200, null=True)),
                ('birthdate', models.DateField(null=True)),
                ('receipt_date', models.DateField(null=True)),
                ('receipt_time', models.TimeField(null=True)),
                ('floor', models.CharField(max_length=200, null=True)),
                ('department', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('Хирургия', 'Хирургия'), ('Онкология', 'Онкология'), ('Реанимация', 'Реанимация'), ('Интенсивная терапия', 'Интенсивная терапия'), ('Check-up', 'Check-up'), ('Ядерная медицина', 'Ядерная медицина')], default='Не выбрано', help_text='Выбор отделения', max_length=100)),
                ('room_number', models.CharField(blank=True, choices=[('2а-1', '2а-1'), ('2а-2', '2а-2'), ('2а-3', '2а-3'), ('2а-4', '2а-4'), ('2а-5', '2а-5'), ('2а-6', '2а-6'), ('2а-7', '2а-7'), ('2а-8', '2а-8'), ('2а-9', '2а-9'), ('2а-10', '2а-10'), ('2а-11', '2а-11'), ('2а-12', '2а-12'), ('2а-13', '2а-13'), ('2а-14', '2а-14'), ('2а-15', '2а-15'), ('2а-16', '2а-16'), ('2а-17', '2а-17'), ('3а-1', '3а-1'), ('3а-2', '3а-2'), ('3а-3', '3а-3'), ('3а-4', '3а-4'), ('3а-5', '3а-5'), ('3а-6', '3а-6'), ('3а-7', '3а-7'), ('3а-8', '3а-8'), ('3а-9', '3а-9'), ('3а-10', '3а-10'), ('3а-11', '3а-11'), ('3а-12', '3а-12'), ('3а-13', '3а-13'), ('3а-14', '3а-14'), ('3а-15', '3а-15'), ('3а-16', '3а-16'), ('3а-17', '3а-17'), ('3b-1', '3b-1'), ('3b-2', '3b-2'), ('3b-3', '3b-3'), ('3b-4', '3b-4'), ('3b-5', '3b-5'), ('3b-6', '3b-6'), ('3b-7', '3b-7'), ('3b-8', '3b-8'), ('3b-9', '3b-9'), ('3b-10', '3b-10')], default='200', help_text='Выбор номера палаты', max_length=100)),
                ('bed', models.CharField(blank=True, choices=[('K1', 'K1'), ('K2', 'K2')], default='200', help_text='Выбор койко-места', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, choices=[('patient', 'patient'), ('patient_archive', 'patient_archive')], default='', help_text='Выбор диеты', max_length=100)),
                ('is_accompanying', models.BooleanField(blank=True, default=False, help_text='Cопровождающий?')),
                ('is_probe', models.BooleanField(blank=True, default=False, help_text='Энтеральное питание (зонд)')),
                ('is_without_salt', models.BooleanField(blank=True, default=False, help_text='Без соли')),
                ('is_without_lactose', models.BooleanField(blank=True, default=False, help_text='Без лактозы')),
                ('is_pureed_nutrition', models.BooleanField(blank=True, default=False, help_text='Протертое питание')),
                ('type_pay', models.CharField(blank=True, choices=[('petrushka', 'petrushka'), ('hadassah', 'hadassah')], default='', help_text='Тип оплаты', max_length=100)),
                ('is_change_diet_bd', models.BooleanField(blank=True, default=True, help_text='Чередовать диету БД при следующей смене? (19:00)')),
                ('extra_bouillon', models.CharField(blank=True, default='', help_text='Дополнительный бульон', max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AllProductСache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_product', models.JSONField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('day', models.CharField(blank=True, choices=[('tomorrow', 'tomorrow'), ('after-tomorrow', 'after-tomorrow')], default='', max_length=31)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Barcodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'active'), ('no_active', 'no_active')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Base',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('base', models.CharField(max_length=5000000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BotChatId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=200, null=True)),
                ('name', models.CharField(max_length=500)),
                ('imageLinks', models.CharField(blank=True, max_length=500, null=True)),
                ('code', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('fatAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('proteinsAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('carbohydratesAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('energyAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fatFullAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('proteinsFullAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('carbohydratesFullAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('energyFullAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('groupId', models.CharField(blank=True, max_length=10000, null=True)),
                ('productCategoryId', models.CharField(blank=True, max_length=10000, null=True)),
                ('type', models.CharField(blank=True, max_length=10000, null=True)),
                ('orderItemType', models.CharField(blank=True, max_length=10000, null=True)),
                ('measureUnit', models.CharField(blank=True, max_length=10000, null=True)),
                ('category', models.CharField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientСache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.JSONField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('day', models.CharField(blank=True, choices=[('tomorrow', 'tomorrow'), ('after-tomorrow', 'after-tomorrow')], default='', max_length=30)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IsBrakeryMagazineCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_brakery_magazine_create', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='IsReportCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_report_create', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('iditem', models.IntegerField(null=True)),
                ('product_id', models.CharField(blank=True, max_length=100, null=True)),
                ('public_name', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.IntegerField(null=True)),
                ('carbohydrate', models.CharField(max_length=200, null=True)),
                ('fat', models.CharField(max_length=200, null=True)),
                ('fiber', models.CharField(max_length=200, null=True)),
                ('energy', models.CharField(max_length=200, null=True)),
                ('weight', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Вес')),
                ('image', models.CharField(max_length=2000, null=True)),
                ('vegan', models.BooleanField(null=True)),
                ('allergens', models.BooleanField(null=True)),
                ('lactose_free', models.BooleanField(null=True)),
                ('sugarless', models.BooleanField(null=True)),
                ('gluten_free', models.BooleanField(null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('ovd', models.BooleanField(null=True)),
                ('ovd_sugarless', models.BooleanField(null=True)),
                ('ovd_vegan', models.BooleanField(null=True)),
                ('shd', models.BooleanField(null=True)),
                ('shd_sugarless', models.BooleanField(null=True)),
                ('bd', models.BooleanField(null=True)),
                ('vbd', models.BooleanField(null=True)),
                ('nbd', models.BooleanField(null=True)),
                ('nkd', models.BooleanField(null=True)),
                ('vkd', models.BooleanField(null=True)),
                ('iodine_free', models.BooleanField(null=True)),
                ('not_suitable', models.BooleanField(null=True)),
                ('category', models.CharField(blank=True, max_length=2000, null=True)),
                ('cooking_method', models.CharField(blank=True, max_length=7000, null=True)),
                ('comment', models.CharField(blank=True, max_length=5000, null=True)),
                ('with_garnish', models.BooleanField(blank=True, default=False, help_text='Блюдо уже с гарниром?')),
            ],
            options={
                'verbose_name': 'Блюда линии раздачи',
                'verbose_name_plural': 'Блюда линии раздачи',
            },
        ),
        migrations.CreateModel(
            name='ProductLp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Название')),
                ('public_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Публичное название')),
                ('product_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID блюда')),
                ('carbohydrate', models.CharField(blank=True, max_length=200, null=True, verbose_name='Углеводы')),
                ('fat', models.CharField(blank=True, max_length=200, null=True, verbose_name='Жиры')),
                ('fiber', models.CharField(blank=True, max_length=200, null=True, verbose_name='Белки')),
                ('energy', models.CharField(blank=True, max_length=200, null=True, verbose_name='Энергетическая ценность')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_lp_images', verbose_name='Фото')),
                ('image_min', models.ImageField(blank=True, null=True, upload_to='product_lp_images_min', verbose_name='Миниатюра')),
                ('description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Состав')),
                ('category', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Категория')),
                ('comment', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Комментарий')),
                ('weight', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Вес')),
                ('number_tk', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Номер ТТК')),
                ('status', models.CharField(default='1', max_length=500, null=True, verbose_name='Статус')),
                ('with_garnish', models.BooleanField(blank=True, default=False, help_text='Блюдо уже с гарниром?', verbose_name='Блюдо с гарниром')),
                ('with_phote', models.BooleanField(blank=True, default=False, help_text='Есть фото?', verbose_name='Есть фото')),
            ],
            options={
                'verbose_name': 'Блюда лечебного питания',
                'verbose_name_plural': 'Блюда лечебного питания',
            },
        ),
        migrations.CreateModel(
            name='ProductStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], help_text='Тип диеты', max_length=100)),
                ('meal', models.CharField(blank=True, choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], default='', max_length=100)),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
                ('products_id', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iiko_server', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UsersReadyOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=200, null=True)),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('full_name', models.CharField(max_length=200, null=True)),
                ('receipt_date', models.DateField(null=True)),
                ('receipt_time', models.TimeField(null=True)),
                ('floor', models.CharField(default='Не выбрано', max_length=200, null=True)),
                ('department', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('Хирургия', 'Хирургия'), ('Онкология', 'Онкология'), ('Реанимация', 'Реанимация'), ('Интенсивная терапия', 'Интенсивная терапия'), ('Check-up', 'Check-up'), ('Ядерная медицина', 'Ядерная медицина')], default='Не выбрано', help_text='Выбор отделения', max_length=100)),
                ('room_number', models.CharField(blank=True, choices=[('2а-1', '2а-1'), ('2а-2', '2а-2'), ('2а-3', '2а-3'), ('2а-4', '2а-4'), ('2а-5', '2а-5'), ('2а-6', '2а-6'), ('2а-7', '2а-7'), ('2а-8', '2а-8'), ('2а-9', '2а-9'), ('2а-10', '2а-10'), ('2а-11', '2а-11'), ('2а-12', '2а-12'), ('2а-13', '2а-13'), ('2а-14', '2а-14'), ('2а-15', '2а-15'), ('2а-16', '2а-16'), ('2а-17', '2а-17'), ('3а-1', '3а-1'), ('3а-2', '3а-2'), ('3а-3', '3а-3'), ('3а-4', '3а-4'), ('3а-5', '3а-5'), ('3а-6', '3а-6'), ('3а-7', '3а-7'), ('3а-8', '3а-8'), ('3а-9', '3а-9'), ('3а-10', '3а-10'), ('3а-11', '3а-11'), ('3а-12', '3а-12'), ('3а-13', '3а-13'), ('3а-14', '3а-14'), ('3а-15', '3а-15'), ('3а-16', '3а-16'), ('3а-17', '3а-17'), ('3b-1', '3b-1'), ('3b-2', '3b-2'), ('3b-3', '3b-3'), ('3b-4', '3b-4'), ('3b-5', '3b-5'), ('3b-6', '3b-6'), ('3b-7', '3b-7'), ('3b-8', '3b-8'), ('3b-9', '3b-9'), ('3b-10', '3b-10')], default='200', help_text='Выбор номера палаты', max_length=100)),
                ('bed', models.CharField(blank=True, choices=[('K1', 'K1'), ('K2', 'K2')], default='200', help_text='Выбор койко-места', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, choices=[('patient', 'patient'), ('patient_archive', 'patient_archive')], default='', help_text='Выбор диеты', max_length=100)),
                ('is_accompanying', models.BooleanField(blank=True, default=False, help_text='Cопровождающий?')),
                ('is_probe', models.BooleanField(blank=True, default=False, help_text='Питание через зонд')),
                ('is_without_salt', models.BooleanField(blank=True, default=False, help_text='Без соли')),
                ('is_without_lactose', models.BooleanField(blank=True, default=False, help_text='Без лактозы')),
                ('is_pureed_nutrition', models.BooleanField(blank=True, default=False, help_text='Протертое питание')),
                ('type_pay', models.CharField(blank=True, choices=[('petrushka', 'petrushka'), ('hadassah', 'hadassah')], default='', help_text='Тип оплаты', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UsersToday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=200, null=True)),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('full_name', models.CharField(max_length=200, null=True)),
                ('receipt_date', models.DateField(null=True)),
                ('receipt_time', models.TimeField(null=True)),
                ('floor', models.CharField(default='Не выбрано', max_length=200, null=True)),
                ('department', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('Хирургия', 'Хирургия'), ('Онкология', 'Онкология'), ('Реанимация', 'Реанимация'), ('Интенсивная терапия', 'Интенсивная терапия'), ('Check-up', 'Check-up'), ('Ядерная медицина', 'Ядерная медицина')], default='Не выбрано', help_text='Выбор отделения', max_length=100)),
                ('room_number', models.CharField(blank=True, choices=[('2а-1', '2а-1'), ('2а-2', '2а-2'), ('2а-3', '2а-3'), ('2а-4', '2а-4'), ('2а-5', '2а-5'), ('2а-6', '2а-6'), ('2а-7', '2а-7'), ('2а-8', '2а-8'), ('2а-9', '2а-9'), ('2а-10', '2а-10'), ('2а-11', '2а-11'), ('2а-12', '2а-12'), ('2а-13', '2а-13'), ('2а-14', '2а-14'), ('2а-15', '2а-15'), ('2а-16', '2а-16'), ('2а-17', '2а-17'), ('3а-1', '3а-1'), ('3а-2', '3а-2'), ('3а-3', '3а-3'), ('3а-4', '3а-4'), ('3а-5', '3а-5'), ('3а-6', '3а-6'), ('3а-7', '3а-7'), ('3а-8', '3а-8'), ('3а-9', '3а-9'), ('3а-10', '3а-10'), ('3а-11', '3а-11'), ('3а-12', '3а-12'), ('3а-13', '3а-13'), ('3а-14', '3а-14'), ('3а-15', '3а-15'), ('3а-16', '3а-16'), ('3а-17', '3а-17'), ('3b-1', '3b-1'), ('3b-2', '3b-2'), ('3b-3', '3b-3'), ('3b-4', '3b-4'), ('3b-5', '3b-5'), ('3b-6', '3b-6'), ('3b-7', '3b-7'), ('3b-8', '3b-8'), ('3b-9', '3b-9'), ('3b-10', '3b-10')], default='200', help_text='Выбор номера палаты', max_length=100)),
                ('bed', models.CharField(blank=True, choices=[('K1', 'K1'), ('K2', 'K2')], default='200', help_text='Выбор койко-места', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, choices=[('patient', 'patient'), ('patient_archive', 'patient_archive')], default='', help_text='Выбор диеты', max_length=100)),
                ('is_accompanying', models.BooleanField(blank=True, default=False, help_text='Cопровождающий?')),
                ('is_probe', models.BooleanField(blank=True, default=False, help_text='Питание через зонд')),
                ('is_without_salt', models.BooleanField(blank=True, default=False, help_text='Без соли')),
                ('is_without_lactose', models.BooleanField(blank=True, default=False, help_text='Без лактозы')),
                ('is_pureed_nutrition', models.BooleanField(blank=True, default=False, help_text='Протертое питание')),
                ('type_pay', models.CharField(blank=True, choices=[('petrushka', 'petrushka'), ('hadassah', 'hadassah')], default='', help_text='Тип оплаты', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='СhangesUsersToday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=200, null=True)),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('time_change', models.CharField(blank=True, choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], default='', max_length=100)),
                ('full_name', models.CharField(max_length=200, null=True)),
                ('receipt_date', models.DateField(null=True)),
                ('receipt_time', models.TimeField(null=True)),
                ('department', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('Хирургия', 'Хирургия'), ('Онкология', 'Онкология'), ('Реанимация', 'Реанимация'), ('Интенсивная терапия', 'Интенсивная терапия'), ('Check-up', 'Check-up'), ('Ядерная медицина', 'Ядерная медицина')], default='Не выбрано', help_text='Выбор отделения', max_length=100)),
                ('room_number', models.CharField(blank=True, choices=[('2а-1', '2а-1'), ('2а-2', '2а-2'), ('2а-3', '2а-3'), ('2а-4', '2а-4'), ('2а-5', '2а-5'), ('2а-6', '2а-6'), ('2а-7', '2а-7'), ('2а-8', '2а-8'), ('2а-9', '2а-9'), ('2а-10', '2а-10'), ('2а-11', '2а-11'), ('2а-12', '2а-12'), ('2а-13', '2а-13'), ('2а-14', '2а-14'), ('2а-15', '2а-15'), ('2а-16', '2а-16'), ('2а-17', '2а-17'), ('3а-1', '3а-1'), ('3а-2', '3а-2'), ('3а-3', '3а-3'), ('3а-4', '3а-4'), ('3а-5', '3а-5'), ('3а-6', '3а-6'), ('3а-7', '3а-7'), ('3а-8', '3а-8'), ('3а-9', '3а-9'), ('3а-10', '3а-10'), ('3а-11', '3а-11'), ('3а-12', '3а-12'), ('3а-13', '3а-13'), ('3а-14', '3а-14'), ('3а-15', '3а-15'), ('3а-16', '3а-16'), ('3а-17', '3а-17'), ('3b-1', '3b-1'), ('3b-2', '3b-2'), ('3b-3', '3b-3'), ('3b-4', '3b-4'), ('3b-5', '3b-5'), ('3b-6', '3b-6'), ('3b-7', '3b-7'), ('3b-8', '3b-8'), ('3b-9', '3b-9'), ('3b-10', '3b-10')], default='200', help_text='Выбор номера палаты', max_length=100)),
                ('bed', models.CharField(blank=True, choices=[('K1', 'K1'), ('K2', 'K2')], default='200', help_text='Выбор койко-места', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, choices=[('patient', 'patient'), ('patient_archive', 'patient_archive')], default='', help_text='Выбор диеты', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TTK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_unit', models.CharField(max_length=200, null=True)),
                ('product_id', models.CharField(max_length=200, null=True)),
                ('name', models.CharField(max_length=500)),
                ('create_at', models.DateField(default=datetime.date.today)),
                ('amount_in', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('amount_middle', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('amount_out', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('status', models.CharField(blank=True, choices=[('product', 'product'), ('pf', 'pf'), ('ingredient', 'ingredient')], default='', max_length=200, null=True)),
                ('ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutritionist.ingredient')),
                ('parent_ttk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutritionist.ttk')),
            ],
        ),
        migrations.CreateModel(
            name='TimetableLp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_the_week', models.CharField(blank=True, choices=[('понедельник', 'понедельник'), ('вторник', 'вторник'), ('среда', 'среда'), ('четверг', 'четверг'), ('пятница', 'пятница'), ('суббота', 'суббота'), ('воскресенье', 'воскресенье')], default='', help_text='День недели', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='', help_text='Выбор диеты', max_length=100)),
                ('meals', models.CharField(blank=True, choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], default='', help_text='Выбор диеты', max_length=100)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutritionist.productlp')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateField()),
                ('date_create', models.DateField(default=datetime.date.today, null=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutritionist.product')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=200, null=True)),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('meal', models.CharField(blank=True, choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], default='', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('category', models.CharField(blank=True, help_text='Категория', max_length=100, null=True)),
                ('type', models.CharField(blank=True, help_text='Тип: экстренное питание, стандартное', max_length=100, null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModifiedDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=30)),
                ('meal', models.CharField(choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], max_length=100)),
                ('date', models.DateField()),
                ('status', models.CharField(blank=True, choices=[('add', 'add'), ('change', 'change')], default='', max_length=30)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuByDayReadyOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateField(default=datetime.date.today)),
                ('date', models.DateField()),
                ('meal', models.CharField(blank=True, choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], default='', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('main', models.CharField(max_length=100, null=True)),
                ('garnish', models.CharField(max_length=100, null=True)),
                ('porridge', models.CharField(max_length=100, null=True)),
                ('soup', models.CharField(max_length=100, null=True)),
                ('dessert', models.CharField(max_length=100, null=True)),
                ('fruit', models.CharField(max_length=100, null=True)),
                ('drink', models.CharField(max_length=100, null=True)),
                ('salad', models.CharField(max_length=100, null=True)),
                ('products', models.CharField(max_length=100, null=True)),
                ('hidden', models.CharField(blank=True, max_length=100, null=True)),
                ('bouillon', models.CharField(blank=True, max_length=100, null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nutritionist.usersreadyorder')),
            ],
        ),
        migrations.CreateModel(
            name='MenuByDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('meal', models.CharField(blank=True, choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('afternoon', 'afternoon'), ('dinner', 'dinner')], default='', max_length=100)),
                ('type_of_diet', models.CharField(blank=True, choices=[('Не выбрано', 'Не выбрано'), ('ОВД', 'ОВД'), ('ОВД без сахара', 'ОВД без сахара'), ('ОВД веган (пост) без глютена', 'ОВД веган (пост) без глютена'), ('Нулевая диета', 'Нулевая диета'), ('ЩД', 'ЩД'), ('ЩД без сахара', 'ЩД без сахара'), ('БД', 'БД'), ('БД день 1', 'БД день 1'), ('БД день 2', 'БД день 2'), ('НБД', 'НБД'), ('ВБД', 'ВБД'), ('НКД', 'НКД'), ('Безйодовая', 'Безйодовая'), ('ПЭТ/КТ', 'ПЭТ/КТ'), ('Без ограничений', 'Без ограничений'), ('ОВД (Э)', 'ОВД (Э)'), ('ОВД без сахара (Э)', 'ОВД без сахара (Э)'), ('ОВД веган (пост) без глютена (Э)', 'ОВД веган (пост) без глютена (Э)'), ('Нулевая диета (Э)', 'Нулевая диета (Э)'), ('ЩД (Э)', 'ЩД (Э)'), ('ЩД без сахара (Э)', 'ЩД без сахара (Э)'), ('НБД (Э)', 'НБД (Э)'), ('ВБД (Э)', 'ВБД (Э)'), ('НКД (Э)', 'НКД (Э)'), ('Безйодовая (Э)', 'Безйодовая (Э)'), ('ПЭТ/КТ (Э)', 'ПЭТ/КТ (Э)'), ('Без ограничений (Э)', 'Без ограничений (Э)'), ('ОВД (П)', 'ОВД (П)'), ('ОВД без сахара (П)', 'ОВД без сахара (П)'), ('ОВД веган (пост) без глютена (П)', 'ОВД веган (пост) без глютена (П)'), ('Нулевая диета (П)', 'Нулевая диета (П)'), ('ЩД (П)', 'ЩД (П)'), ('ЩД без сахара (П)', 'ЩД без сахара (П)'), ('НБД (П)', 'НБД (П)'), ('ВБД (П)', 'ВБД (П)'), ('НКД (П)', 'НКД (П)'), ('Безйодовая (П)', 'Безйодовая (П)'), ('ПЭТ/КТ (П)', 'ПЭТ/КТ (П)'), ('Без ограничений (П)', 'Без ограничений (П)'), ('Индивидуальная диета', 'Индивидуальная диета')], default='ОВД', help_text='Выбор диеты', max_length=100)),
                ('main', models.CharField(blank=True, max_length=100, null=True)),
                ('garnish', models.CharField(blank=True, max_length=100, null=True)),
                ('porridge', models.CharField(blank=True, max_length=100, null=True)),
                ('soup', models.CharField(blank=True, max_length=100, null=True)),
                ('dessert', models.CharField(blank=True, max_length=100, null=True)),
                ('fruit', models.CharField(blank=True, max_length=100, null=True)),
                ('drink', models.CharField(blank=True, max_length=100, null=True)),
                ('salad', models.CharField(blank=True, max_length=100, null=True)),
                ('products', models.CharField(blank=True, max_length=100, null=True)),
                ('hidden', models.CharField(blank=True, max_length=100, null=True)),
                ('bouillon', models.CharField(blank=True, max_length=100, null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=200, null=True)),
                ('date_create', models.DateField(default=datetime.datetime.now)),
                ('comment', models.CharField(blank=True, max_length=10000, null=True)),
                ('rating', models.CharField(max_length=10, null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
